version: '3.4'

volumes:
  nginx:
  ipfs0:
  ipfs1:
  ipfs2:
  ipfs3:
  cluster0:
  cluster1:
  cluster2:
  cluster3:

networks: 
  ipfsNetwork:

services:
  nginx:
    container_name: nginx
    image: nginx:1.17.4-alpine
    ports:
      - 10080:80
    volumes:
      # - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - nginx:/etc/nginx
    networks: 
      - ipfsNetwork

  ipfs0:
    container_name: ipfs0
    build:
      context: .
      dockerfile: ./Dockerfile
    # image: ipfs/go-ipfs
    ports:
    #   - 5001:5001
    #   - 4001:4001
      - 8081:8080
    environment:
      - LIBP2P_FORCE_PNET=1
      - IPFS_SWARM_KEY_FILE=/data/ipfs/swarm.key
    volumes:
      - ipfs0:/data/ipfs
      # - ./compose/ipfs0:/data/ipfs
      - ./swarm.key:/data/ipfs/swarm.key

    networks: 
      - ipfsNetwork

    
  ipfs1:
    container_name: ipfs1
    build:
      context: .
      dockerfile: ./Dockerfile
    # image: ipfs/go-ipfs
    # ports:
    #   - 5001:5001
    #   - 4001:4001
    #   - 8081:8080
    environment:
      - LIBP2P_FORCE_PNET=1
      - IPFS_SWARM_KEY_FILE=/data/ipfs/swarm.key
    volumes:
      - ipfs1:/data/ipfs
      # - ./compose/ipfs1:/data/ipfs
      - ./swarm.key:/data/ipfs/swarm.key

    networks: 
      - ipfsNetwork

  ipfs2:
    container_name: ipfs2
    build:
      context: .
      dockerfile: ./Dockerfile
    # image: ipfs/go-ipfs
    # ports:
    #   - 5001:5001
    #   - 4001:4001
    #   - 8081:8080
    environment:
      - LIBP2P_FORCE_PNET=1
      - IPFS_SWARM_KEY_FILE=/data/ipfs/swarm.key
    volumes:
      - ipfs2:/data/ipfs
      # - ./compose/ipfs2:/data/ipfs
      - ./swarm.key:/data/ipfs/swarm.key

    networks: 
      - ipfsNetwork

  ipfs3:
    container_name: ipfs3
    build:
      context: .
      dockerfile: ./Dockerfile
    # image: ipfs/go-ipfs
    # ports:
    #   - 5001:5001
    #   - 4001:4001
    #   - 8081:8080
    environment:
      - LIBP2P_FORCE_PNET=1
      - IPFS_SWARM_KEY_FILE=/data/ipfs/swarm.key
    volumes:
      - ipfs3:/data/ipfs
      # - ./compose/ipfs3:/data/ipfs
      - ./swarm.key:/data/ipfs/swarm.key

    networks: 
      - ipfsNetwork

  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:v0.11.0
    depends_on:
      - ipfs0
    environment:
      CLUSTER_PEERNAME: cluster0
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
          # Open API port (allows ipfs-cluster-ctl usage on host)
          - "127.0.0.1:9094:9094"
          # - 9095:9094
          # The cluster swarm port would need  to be exposed if this container
          # was to connect to cluster peers on other hosts.
          # But this is just a testing cluster.
          # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - cluster0:/data/ipfs-cluster
      # - ./compose/cluster0:/data/ipfs-cluster
    networks: 
      - ipfsNetwork

  cluster1:
    container_name: cluster1
    image: ipfs/ipfs-cluster:v0.11.0
    depends_on:
      - ipfs1
    environment:
      CLUSTER_PEERNAME: cluster1
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs1/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094
      CLUSTER_MONITORPINGINTERVAL: 2s
    ports:
          # Open API port (allows ipfs-cluster-ctl usage on host)
          - "127.0.0.1:9095:9094"
          # - 9095:9094
          # The cluster swarm port would need  to be exposed if this container
          # was to connect to cluster peers on other hosts.
          # But this is just a testing cluster.
          # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - cluster1:/data/ipfs-cluster
      # - ./compose/cluster1:/data/ipfs-cluster
    networks: 
      - ipfsNetwork

  cluster2:
    container_name: cluster2
    image: ipfs/ipfs-cluster:v0.11.0
    depends_on:
      - ipfs2
    environment:
      CLUSTER_PEERNAME: cluster2
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs2/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094
      CLUSTER_MONITORPINGINTERVAL: 2s
    ports:
          # Open API port (allows ipfs-cluster-ctl usage on host)
          - "127.0.0.1:9096:9094"
          # - 9096:9094
          # The cluster swarm port would need  to be exposed if this container
          # was to connect to cluster peers on other hosts.
          # But this is just a testing cluster.
          # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - cluster2:/data/ipfs-cluster
      # - ./compose/cluster1:/data/ipfs-cluster
    networks: 
      - ipfsNetwork

  cluster3:
    container_name: cluster3
    image: ipfs/ipfs-cluster:v0.11.0
    depends_on:
      - ipfs3
    environment:
      CLUSTER_PEERNAME: cluster3
      CLUSTER_SECRET: ${CLUSTER_SECRET}
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs3/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*'
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094
      CLUSTER_MONITORPINGINTERVAL: 2s
    ports:
          # Open API port (allows ipfs-cluster-ctl usage on host)
          - "127.0.0.1:9097:9094"
          # - 9097:9094
          # The cluster swarm port would need  to be exposed if this container
          # was to connect to cluster peers on other hosts.
          # But this is just a testing cluster.
          # - "9096:9096" # Cluster IPFS Proxy endpoint
    volumes:
      - cluster3:/data/ipfs-cluster
      # - ./compose/cluster1:/data/ipfs-cluster
    networks: 
      - ipfsNetwork